set encoding=utf8
using modex Person-modex.xml
using modex Location-modex.xml
using modex Organization-modex.xml
using groups Person
using groups Location
using groups Organization
set defaultAction=>CreateSpecificEntity()

#----------------------------------------------------------------------
# recognition of person names
#----------------------------------------------------------------------

# known identified persons

#----------------------------------------------------------------------
# recognition of person names
#----------------------------------------------------------------------
use firstname.lst
use wd_firstname.lst
use title.lst,function_title.lst
use person.lst
use person_ending.lst
use tussenvoegsel.lst
use speech_verb.lst
use wd_lastname.lst

# hack to take initials into account -> should be in tokenizer
@Initial=(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,t_abbrev)
#@PersonNamePart=(t_capital_1st,t_capital,$NP,@WikidataLastname)
@PersonNamePart=(t_capital_1st,t_capital,t_capital_small,$NP)
@particule=(de,da,le,van,von,el,al,Al,del,Del,De,La,@Tussenvoegsel)
@AnyFirstname=(@Firstname,@WikidataFirstname)
@AnyTitle=(@Title,@FunctionTitle)

# rules initiated by a title, with stop condition
[@AnyTitle]::@AnyFirstname? @Initial? (@particule? @PersonNamePart){1-3} @PersonEnding? [($DET|$PRON|$ADJ|$V)]:PERSON:
+SetEntityFeature(trigger,"title")
=>AddEntityFeature(right.1,"firstname")
=>AddEntityFeature(right.2,"firstname")
=>AppendEntityFeature(right.3.1,"lastname")
=>AppendEntityFeature(right.3.2,"lastname")
=>NormalizeEntity()
=<ClearEntityFeatures()

# without stop condition
[@AnyTitle]::@PersonNamePart? @Initial? (@particule? @PersonNamePart){1-3} @PersonEnding?:PERSON:
+SetEntityFeature(trigger,"title")
=>AddEntityFeature(right.1,"firstname")
=>AddEntityFeature(right.2,"firstname")
=>AppendEntityFeature(right.3,"lastname")
=>AppendEntityFeature(right.4,"lastname")
=>NormalizeEntity()
=<ClearEntityFeatures()

# rules initiated with a firstname with stop condition
@AnyFirstname::@Initial? (@particule? @PersonNamePart){1-2} @PersonEnding? [($DET|$PRON|$ADJ|$V)]:PERSON:
=>SetEntityFeature(trigger,"firstname")
=>AddEntityFeature(right.1,"firstname")
=>AppendEntityFeature(right.2.1,"lastname")
=>AppendEntityFeature(right.2.2,"lastname")
=>NormalizeEntity()
=<ClearEntityFeatures()

# generic rule with firstname without stop condition
@AnyFirstname::@Initial? (@particule? @PersonNamePart){1-2} @PersonEnding?:PERSON:
=>SetEntityFeature(trigger,"firstname")
=>AddEntityFeature(right.1,"firstname")
=>AppendEntityFeature(right.2.1,"lastname")
=>AppendEntityFeature(right.2.2,"lastname")
=>AppendEntityFeature(right.2.3,"qualifier")
=>NormalizeEntity()
=<ClearEntityFeatures()

# other contexts: title after the name
# Zhang A Liu , director
@PersonNamePart:@Initial? @PersonNamePart{0-2}:@PersonEnding? [,] [@FunctionTitle]:PERSON:
+SetEntityFeature(right.3,"title")
=>SetEntityFeature(trigger,"lastname")
=>AddEntityFeature(left.1,"firstname")
=>AddEntityFeature(left.2,"lastname")
=>AddEntityFeature(right.1,"qualifier")
=>NormalizeEntity()
=<ClearEntityFeatures()

# reported speech: not if org
<Location.LOCATION>::[@speechVerb]:NOT_PERSON:
<Organization.ORGANIZATION>::[@speechVerb]:NOT_PERSON:

# "bla bla", Machin said.
@PersonNamePart::(@PersonNamePart|@Initial){0-2} [(@speechVerb .)]:PERSON:
=>SetEntityFeature(trigger,"lastname")
=>AddEntityFeature(right.1,"lastname")
=>NormalizeEntity()
=<ClearEntityFeatures()

# bla bla, said Machin
@PersonNamePart:[,] [@speechVerb]:@Initial? (@particule? @PersonNamePart){1-2}:PERSON:
=>AppendEntityFeature(trigger,"lastname")
=>AppendEntityFeature(right.1,"lastname")
=>AppendEntityFeature(right.2.1,"lastname")
=>AppendEntityFeature(right.2.2,"lastname")
=>NormalizeEntity()
=<ClearEntityFeatures()

# use of 'who' as a trigger, with some protections
@Pronouns=(I,You,It,He,She,They,We)
@Conjunctions=(But,And,For,All)

[who]:[<Location.LOCATION>] [,]::NOT_PERSON:
[who]:[<Organization.ORGANIZATION>] [,]::NOT_PERSON:
[who]:(@Pronouns|@Conjunctions) [,]::NOT_PERSON:

# Doo Xu who
[who]:@PersonNamePart @PersonNamePart{0-2} [,]::PERSON:
=>SetEntityFeature(left.1,"firstname")
=>AddEntityFeature(left.2,"lastname")
=>NormalizeEntity()
=<ClearEntityFeatures()
