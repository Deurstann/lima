set encoding=utf8
using modex DateTime-modex.xml,Numex-modex.xml
using groups DateTime,Numex
set defaultAction=>CreateSpecificEntity()

@day=(lundi,Lundi,LUNDI,lun,lund,Lun,Lund,LUN,LUND,
mardi,Mardi,MARDI,mard,mar,Mard,Mar,MARD,MAR,Mar\.,
mercredi,Mercredi,MERCREDI,mercred,mer,mercre,Mercred,Mer,Mercred,MERCRED,MER,MERCRE,
jeudi,Jeudi,JEUDI,jeu,jeud,Jeu,Jeud,JEU,JEUD,
vendredi,Vendredi,VENDREDI,ven,vendred,Ven,Vendred,VEN,VENDRED,
samedi,Samedi,SAMEDI,sam,samed,SAM,Samed,SAM,SAMED,
dimanche,Dimanche,DIMANCHE,dim,dimanch,di,Dim,Dimanch,Di,DIM,DIMANCH,DI);

@dayNoAbbrev=(lundi,Lundi,LUNDI,
mardi,Mardi,MARDI,
mercredi,Mercredi,MERCREDI,
jeudi,Jeudi,JEUDI,
vendredi,Vendredi,VENDREDI,
samedi,Samedi,SAMEDI,
dimanche,Dimanche,DIMANCHE);

@month=(janvier,JANVIER,Janvier,janv,Janv,JANV,Jan,
février,FEVRIER,Février,fév,FEV,Fév,
mars,MARS,Mars,mar,Mar,MAR,
avril,AVRIL,Avril,avr,Avr,
mai,MAI,Mai,
juin,JUIN,Juin,Jui,
juillet,JUILLET,Juillet,juil,Juil,JUIL,Jui,
août,AOUT,Août,Aôu,
septembre,SEPTEMBRE,Septembre,sept,SEPT,Sept,Sep,
octobre,OCTOBRE,Octobre,octobr,oct,OCT,Oct,octob,OCTOB,Octob,
novembre,NOVEMBRE,Novembre,nov,NOV,Nov,
décembre,DECEMBRE,Décembre,déc,dec,Déc);

@monthAbbrev=(janv,Janv,JANV,Jan,
fév,FEV,Fév,févr,Févr,FEVR,
mar,Mar,MAR,
avr,Avr,
Jui,
juil,Juil,JUIL,
Aôu,
sept,SEPT,Sept,Sep,
octobr,oct,OCT,Oct,octob,OCTOB,Octob,
nov,NOV,Nov,
déc,dec,Déc);

@monthNoAbbrev=(janvier,JANVIER,Janvier,
février,FEVRIER,Février,
mars,MARS,Mars,
avril,AVRIL,Avril,
mai,MAI,Mai,
juin,JUIN,Juin,
juillet,JUILLET,Juillet,
août,AOUT,Août,
septembre,SEPTEMBRE,Septembre
octobre,OCTOBRE,Octobre,
novembre,NOVEMBRE,Novembre,
décembre,DECEMBRE,Décembre);

@numday=(
premier,
1er,O,
deux,
trois,
quatre,
cinq,
six,
sept,
huit,
neuf,
dix,
onze,
douze,
treize,
quatorze,
quinze,
seize,
dix-sept,
dix-huit,
dix-neuf,
vingt,
vingts,
vingt-deux,
vingt-trois,
vingt-quatre,
vingt-cinq,
vingt-six,
vingt-sept,
vingt-huit,
vingt-neuf,
trente,
trente et un,
01,
02,
03,
04,
05,
06,
07,
08,
09
)

@nummonth=(t_integer>1<12)

@numyear=(t_integer>1700<2050,t_integer>1<99)
@numyear4=(t_integer>1700<2050)

# lundi 22 mai 1968 | lundi, 4 sepetembre 2014 | lundi 18 octobre, 2014 | Mer. 28 février 2015,  mercredi 26 févr, mercredi 26 févr.
//@monthAbbrev|@monthAbbrev \.? = Warning, need to use the both annotations.
@day::\.? ,? (@numday|t_integer>1<31) (@monthAbbrev|@monthAbbrev \.?|@monthNoAbbrev) @numyear?:DATE:
=>NormalizeDate()

@day::\.? ,? t_date:DATE:

# jours simples
@daytime=(matin,midi,après-midi,soir)

@day::,? [t_integer] [(\:|H|h)] [t_integer]:DATE:
=>NormalizeRelativeDate()

@dayNoAbbrev:ce::DATE:
=>NormalizeRelativeDate()

@dayNoAbbrev::prochain:DATE:
=>NormalizeRelativeDate("next_day")

@dayNoAbbrev::(dernier|@daytime|@numday|t_integer>1<31)?:DATE:
=>NormalizeRelativeDate()

#------------------------------
@modifierDate=(début,mi,fin);

#------------------------------
# annonceur mois pour période

@month:(de|d\') (@modifierDate)?:(@numyear)? à (@modifierDate)? @month (@numyear)?:DATE:
=>NormalizeDate("isInterval")

<NUMBER>:[du]:(@month)? (@numyear)? [au] [(@numday|t_integer>1<31|<NUMBER>)] [@month] [(@numyear)?]:DATE:
=>NormalizeDate()

@month:[du] [(@numday|t_integer>1<31|<NUMBER>)] [(@month)?] [(@numyear)?] [au] (@numday|t_integer>1<31|<NUMBER>):(@numyear)?:DATE:
=>NormalizeDate()

#------------------------------

# fin juin
@month:@modifierDate::DATE:
=>NormalizeRelativeDate()

# 22 mai 1968
# 22 mai
# 02 mai
# mai 1968
# mai
# 18 juin 40
# 31 octobre prochain
# 22 sept. 2014

# lundi 18 octobre, 2014 (atteste Wipolo)
@month:(@numday | t_integer>1<31 )?:[(\.? \,?)?] @numyear:DATE:
=>NormalizeDate()

@month:(@numday | t_integer>1<31 )?:(dernier|suivant)?:DATE:
=>NormalizeRelativeDate()

@month::prochain:DATE:
=>NormalizeRelativeDate("next_month")

# fin 2003

@numyear4:@modifierDate::DATE:
=>NormalizeRelativeDate()

@annee=(année$NC,an$NC)

@annee:(début|milieu|fin) (de|(de l\')|d\'):t_integer?:DATE:
année::(dernière|passée|prochaine):DATE:
an::(dernier|passé|prochain):DATE:
mois::(dernier|passé|prochain):DATE:

# remove this one : dans les annees 90: not easy to normalize, and
# not specially useful to date seismic event
#[@annee]::(t_integer|((<NUMBER>){1-3})):DATE:
#=>NormalizeDate()

#partial periods of years

semestre:(premier|second):((de (l\'année)?)? @numyear4)?:DATE:
trimestre:(premier|deuxième|troisième|quatrième):((de (l\'année)?)? @numyear4)?:DATE:
rentrée:[la]:(de (l\'année)?)? @numyear4:DATE:

@saison=(printemps$NC,été$NC,automne$NC,hiver$NC)
@saison:((début|milieu|fin) (de|(de l\')|d\'|du)?)?:(de (l\'année)?)? @numyear:DATE:


# centuries

siècle$NC:(t_ordinal_roman|t_cardinal_roman)::DATE:
=>NormalizeRelativeDate()


siècle$NC:<NUMBER>::DATE:
=>NormalizeRelativeDate()

# 1984
# en 1979
# en Décembre

@in=(en,depuis)

@monthNoAbbrev:[(@in|au? mois de)?]::DATE:
=>NormalizeRelativeDate()

#------------------------------
# informal dates (to normalize, indicate the difference from the reference)
#aujourd\'::hui:DATE:
#=>NormalizeRelativeDate("diff_0")

#GC20130730: aujourd\'hui as dates are given category NC while they should remain adverbs.
# Should find a solution: specific EN type,  ?

#aujourd\'hui:::DATE:
#=>NormalizeRelativeDate("date_document,diff_0d")

## ce matin, ce soir etc.
#@daytime:(ce|cet)::DATE:
#=>NormalizeRelativeDate("date_document,diff_0d")

#hier:::DATE:
#=>NormalizeRelativeDate("date_document,diff_-1d")

#demain:::DATE:
#=>NormalizeRelativeDate("date_document,diff_1d")

#après-demain:::DATE:
#=>NormalizeRelativeDate("date_document,diff_2d")

#------------------------------
t_date:::DATE:

#------------------------------
# numeric forms (should be recognized by tokenizer in the future)

# 22-05-68
# integer - integer - integer

t_integer>1<31::- t_integer - t_integer:DATE:
=>NormalizeDate()

@numday::- t_integer - t_integer:DATE:
=>NormalizeDate()

@numyear4::- t_integer - t_integer:DATE:
=>NormalizeDate()

# 22/05/68
# fraction / integer or integer / integer / integer

@numday::/ t_integer / t_integer:DATE:
=>NormalizeDate()

t_integer>1<31::/ t_integer / t_integer:DATE:
=>NormalizeDate()

# Ne fonctionne pas remplace par @numyear4:T_Nf /::DATE:
#T_Nf::/ t_integer:DATE:
#=>NormalizeDate()


# numbers between 1700 and 2050 are dates
# unless followed by a unit

@numyear4::(de|d\')? $NC:NOT_DATE:

@numyear4:t_fraction /::DATE:
=>NormalizeDate()


@numyear4:::DATE:
=>NormalizeDate()
