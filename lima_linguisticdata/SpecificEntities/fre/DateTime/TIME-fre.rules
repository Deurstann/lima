set encoding=utf8
using modex DateTime-modex.xml,Numex-modex.xml
using groups DateTime,Numex
set defaultAction=>CreateSpecificEntity()

# timex (to bypass lacks in tokenization)

use hours.lst
use timezone.lst

heure$NC:(T_Ni|<NUMBER>):(T_Ni|(et (demie|quart)))?:TIME:
=>NormalizeLocalTime()

# 08:43:08

@localtime=(locales,heure$NC local$ADJ,heure de Paris,heure française)

@h=(h,H,\:)

@utc=(UTC,GMT)

# 11:00 AM, cette forme apparait de plus en plus dans les textes en français
T_Ni:T_Ni \::(\: T_Ni)? (AM|A.M.|PM|P.M.)? (@timezone)?:TIME:
=>NormalizeLocalTime("date_current")

t_integer>0<60:t_integer>0<24 \::(\: t_integer>0<60)? (AM|A.M.|PM|P.M.)? (@timezone)?:TIME:
=>NormalizeLocalTime("date_current")

#<NUMBER>::\: <NUMBER> (\: <NUMBER>)? (AM|A.M.|PM|P.M.)? (@timezone)?:TIME:
#=>NormalizeLocalTime("date_current")

# when both local and UTC are specified
@h:<NUMBER>:<NUMBER> (\(? @localtime \)?)? \( <NUMBER> @h <NUMBER> @utc \):TIME:
=>NormalizeUTCTime("date_current")

# when only UTC time
@h:<NUMBER>:<NUMBER> \(? @utc \)?:TIME:
=>NormalizeUTCTime("date_current")

# when local time or nothing
@h:<NUMBER>:<NUMBER> (\(? @localtime \)?)?:TIME:
=>NormalizeLocalTime("date_current")

#@h:<NUMBER>::TIME:
#=>NormalizeUTCTime("date_current")

# 12h45 (values in a list -> should be recognized by tokenizer)
@Hours::(\(? @utc \)?)?:TIME:
=>NormalizeUTCTime("date_current")

@Hours::(\(? @localtime \)?)?:TIME:
=>NormalizeLocalTime("date_current")

#----------------------------------------------------------------------
# precise time periods

@timeUnit=(
seconde,secondes,heure,heures,jour,jours,
semaine,semaines,mois,an,ans
)

@PrecisionPost=(plus tard,plus tôt,avant)

@PrecisionPre=(derniers)

T_Ni:@PrecisionPre::TIME:
=>NormalizeLocalTime()

T_Ni::@timeUnit @PrecisionPost:TIME:
=>NormalizeLocalTime()

t_hour:::TIME:

minuit:::TIME:
midi:::TIME:

