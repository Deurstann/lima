set encoding=utf8
using modex Person-modex.xml
using groups Person
set defaultAction=>CreateSpecificEntity()

use firstname.lst,prefirstname.lst
use title.lst,function_title.lst
use person.lst

@particule=(de,da,le,van,von,el,al,Al,del,Del,De,La)

#----------------------------------------------------------------------
# contextual rules for person recognition
#----------------------------------------------------------------------

#------------------------------
# pape Jean-Paul II
# (T_Acc|T_Aco|T_Asc|T_Aso) = alpha capital/small roman ordinal/cardinal: too noisy, use a simple dynasty order numbers list
@DynastyOrder=(I,II,III,IV,V,VI,VII,VIII,IX,X,XI,XII,XIII,XIV,XV,XVI,XVII,XVIII,XIX,XX)
# OME @Firstname:[(@PreFirstname)?]:$NP? @DynastyOrder:PERSON:=>NormalizePersonName()

#------------------------------
#@Firstname:[(@Title|@FunctionTitle)?]:(@particule? ($NP|t_capital)){1-2}:PERSON:=>NormalizePersonName()

# hack to take initials into account -> should be in tokenizer
@Initial=(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z)

@PersonNamePart=(t_capital_1st,t_capital,$NP)

# rule Obama
# Barack::Obama:PERSON:
# =>SetEntityFeature(trigger,"firstname")
# =>SetEntityFeature(right,"lastname")
# =>NormalizeEntity()
# =<ClearEntityFeatures()

# generic rule with firstname with stop condition
# Ambroise Long va à la cantine.
@Firstname:(@Title|@FunctionTitle)?:(@Initial|t_abbrev)? (@particule? @PersonNamePart){1-2} [($DET|$PRON|$ADJ|$V)]:PERSON:
=>SetEntityFeature(left,"title")
=>SetEntityFeature(trigger,"firstname")
=>AddEntityFeature(right.1,"firstname")
=>AppendEntityFeature(right.2.1,"lastname")
=>AppendEntityFeature(right.2.2,"lastname")
=>NormalizeEntity()
=<ClearEntityFeatures()

# generic rule with firstname without stop condition
# title is not usefull, because rule with title ar triggered 1 node before!!!
# Barack Obama
# Ambroise de Monge
# Ambroise André Monge: 2 firstname disable, NOK because of duration of compilation
# Augustin G. Monge
# Ambroise G Monge
# Ambroise Long
@Firstname:(@Title|@FunctionTitle)?:(@Initial|t_abbrev)? (@particule? @PersonNamePart){1-2}:PERSON:
=>SetEntityFeature(trigger,"firstname")
=>SetEntityFeature(left,"title")
=>AddEntityFeature(right.1,"firstname")
=>AppendEntityFeature(right.2.1,"lastname")
=>AppendEntityFeature(right.2.2,"lastname")
=>NormalizeEntity()
=<ClearEntityFeatures()

# generic with title (take precedence over generic with firstname because title is before firstname)
# Sa Majesté Elizabeth II
@Title::@Firstname @DynastyOrder? (@particule? @PersonNamePart){0-2}:PERSON:
=>AddEntityFeature(trigger,"title")
=>SetEntityFeature(right.1,"firstname")
=>AddEntityFeature(right.2,"firstname")
=>AppendEntityFeature(right.3,"lastname")
=>AppendEntityFeature(right.4,"lastname")
=>NormalizeEntity()
=<ClearEntityFeatures()

# generic with title (take precedence over generic with firstname because title is before firstname)
# Dr Watson
# le président Ambroise de Monge
# le président Ambroise André Monge: 2 firstname disable, NOK because of duration of compilation
# le président Augustin G. Monge
# le président Ambroise G Monge
# Une des responsables de l'opération "Pièces Jaunes" est Mme Bernadette Chirac.
# le président Ambroise Monge mange
@Title::@Firstname? (@Initial|t_abbrev)? (@particule? @PersonNamePart){1-2}:PERSON:
=>AddEntityFeature(trigger,"title")
=>SetEntityFeature(right.1,"firstname")
=>AddEntityFeature(right.2,"firstname")
=>AppendEntityFeature(right.3,"lastname")
=>AppendEntityFeature(right.4,"lastname")
=>NormalizeEntity()
=<ClearEntityFeatures()

# generic with title (take precedence over generic with firstname because title is before firstname)
# Sa Majesté Elizabeth II
@Title::@Firstname @DynastyOrder (@particule? @PersonNamePart){1-2}:PERSON:
=>AddEntityFeature(trigger,"title")
=>SetEntityFeature(right.1,"firstname")
=>AddEntityFeature(right.2,"firstname")
=>AppendEntityFeature(right.3,"lastname")
=>AppendEntityFeature(right.4,"lastname")
=>NormalizeEntity()
=<ClearEntityFeatures()

@FunctionTitle::@Firstname? (@Initial|t_abbrev)? (@particule? @PersonNamePart){1-2}:PERSON:
=>SetEntityFeature(trigger,"title")
=>AddEntityFeature(right.1,"firstname")
=>AddEntityFeature(right.2,"firstname")
=>AppendEntityFeature(right.3,"lastname")
=>AppendEntityFeature(right.4,"lastname")
=>NormalizeEntity()
=<ClearEntityFeatures()

# generic with initial lastname without title nor firstname
# too productive?
# B. Youza
t_abbrev::(@PersonNamePart){1-2}:PERSON:
=>SetEntityFeature(trigger,"firstname")
=>AppendEntityFeature(right,"lastname")
=>NormalizeEntity()
=<ClearEntityFeatures()

#t_capital_1st:[@TitlePlural]:(t_capital_1st|$NP){0-2} [et] (t_capital_1st|$NP){1-3}:PERSON:
#$NP:[@TitlePlural]:(t_capital_1st|$NP){0-2} [et] (t_capital_1st|$NP){1-3}:PERSON:
# => one rule for each part
# OME @PersonNamePart:[@TitlePlural]:(@PersonNamePart){0-2} [et]:PERSON:
# OME @PersonNamePart:[(@TitlePlural (@PersonNamePart){0-2} et)]:(@PersonNamePart){0-2}:PERSON:
# @Firstname:[(@Title|@FunctionTitle)?]:(@Initial .?)? (@particule? (t_capital_1st|t_capital)){1-2}:PERSON:=>NormalizePersonName()
# t_capital_1st:[(@Title|@FunctionTitle)]:(t_capital_1st|t_capital){1-2}:
# =>SetEntityFeature(left,"title")
# =>SetEntityFeature(trigger,"lastname")
# =>AppendEntityFeature(right,"lastname")
# =>NormalizeEntity()
# =<ClearEntityFeatures()
# t_capital_1st:(t_capital_1st|t_capital){0-2}:[(, @FunctionTitle)]:PERSON:=>NormalizePersonName()
#------------------------------
# a list of known persons (single entities)
# OME @person:::PERSON:=>NormalizePersonName()
#------------------------------
# firstname without name ?
#@Firstname:::PERSON:=>NormalizePersonName()
