set encoding=utf8
using modex Location-modex.xml
using groups Location
set defaultAction=>CreateSpecificEntity()

#----------------------------------------------------------------------
# loading of gazeteers
#----------------------------------------------------------------------
use regions.lst
use countries.lst
use cities.lst
use riversAndSeas.lst
use miscLocations.lst
use highways.lst
use annonceurLieu.lst
use greeklocations.lst
use annonceurVille.lst
use annonceurVoie.lst
use annonceurGeo.lst
use annonceurFact.lst

@aqua=(ru$NC,ruisselet,ruisseau,rivière$NC,fleuve$NC,torrent,rigole$NC,ravine$NC,oued,étang$NC,marais$NC,mare$NC,lac$NC,mer$NC,océan$NC,courant$NC,canal,canaux,chenal,source$NC,fontaine$NC,puit$NC,Mer)
#add Mer (in uppercase) to @aqua because Mer is identifed as $NP.

@mountain=(massif\ central,Pyrénées,Alpes,massif Armoricain,Vosges,Jura,Atlas,Chaînes\ d'Ougarta);

@PrecisionGeographique=(sud,nord,est,ouest,sud-est,nord-est,sud-ouest,nord-ouest)

@AnnonceurLieu::(t_alphanumeric):NOT_LOCATION: 

#----------------------------------------------------------------------
# recognition of french adresses
#----------------------------------------------------------------------

#******************************************************************************
# les adresses
#
T_Ni>1::(@Street|place) *{1-3} (escalier (T_Ni>1|A|B|C|D|E|F|G))? ((batiment|bâtiment|résidence|bat|bat\.) (t_capital_1st{1-3}|T_Ni>1|A|B|C|D|E|F|G))?:ADDRESS:
=>SetEntityFeature(trigger,"address-number")
=>AppendEntityFeature(right.3.1,"other-adress-componant")
=>AppendEntityFeature(right.3.2,"other-adress-componant")
=>AppendEntityFeature(right.4.1,"other-adress-componant")
=>AppendEntityFeature(right.4.2,"other-adress-componant")
=>NormalizeEntity()
=<ClearEntityFeatures()

T_Ni>1::(@Cities) (@Countries)?:ADDRESS:
=>SetEntityFeature(trigger,"zip-code")
=>NormalizeEntity()
=<ClearEntityFeatures()

#----------------------------------------------------------------------
# recognition of other adresss/location
#    = incomplete address ?
#----------------------------------------------------------------------

#----------------------------------------------------------------------
# recognition of steets and highways
#----------------------------------------------------------------------
#la nationale 118.
T_Ni::(voie|route)? (nationale|départementale|communale):ODO:
=>SetEntityFeature(trigger,"name")
=>AppendEntityFeature(right,"kind")
=>NormalizeEntity()
=<ClearEntityFeatures()

#A10
AT_Ni>1::(autoroute)?:ODO:
=>SetEntityFeature(trigger,"name")
=>AppendEntityFeature(right,"kind")
=>NormalizeEntity()
=<ClearEntityFeatures()

#la n118
nT_Ni>1::(autoroute)?:ODO:
=>SetEntityFeature(trigger,"name")
=>AppendEntityFeature(right,"kind")
=>NormalizeEntity()
=<ClearEntityFeatures()

#le triangle de Rocquencourt
triangle::de Rocquencourt:ODO:
=>SetEntityFeature(trigger,"kind")
=>AppendEntityFeature(right.2,"name")
=>NormalizeEntity()
=<ClearEntityFeatures()

#----------------------------------------------------------------------
# Geopolitical entities (loc.admin)
#----------------------------------------------------------------------
####################################
@Countries::((du|de l\'|d') @PrecisionGeographique|central$ADJ|profond$ADJ|subsaharien$ADJ):GEO:
=>AppendEntityFeature(trigger,"name")
=>AppendEntityFeature(right,"qualifier")
=>AppendEntityFeature(right.1,"qualifier")
=>AppendEntityFeature(right.2,"qualifier")
=>NormalizeEntity()
=<ClearEntityFeatures()
#1.1 + 1.2 => du sud. 

@Regions::((du|de l\') @PrecisionGeographique|central$ADJ|profond$ADJ|subsaharien$ADJ)):GEO:
=>AppendEntityFeature(trigger,"name")
=>AppendEntityFeature(right,"qualifier")
=>AppendEntityFeature(right.1,"qualifier")
=>AppendEntityFeature(right.2,"qualifier")
=>NormalizeEntity()
=<ClearEntityFeatures()
#loc.adm.reg

#à 3 km à l'est de la ville de Paris.
#annotation IMM : <amount> <val> 100 </val> <unit> kilomètres </unit> </amount> <loc.adm.reg> <qualifier> à l' ouest </qualifier> de <loc.adm.town> <name> Bagdad </name> </loc.adm.town> </loc.adm.reg> 
@PrecisionGeographique:[((km|kms|kilometre|kilometres|kilomètre|kilomètres|kilimétrer)?] (au|à l\')?):(de|des|du|d'|de $DET) ($DET? (@AnnonceurFact|@AnnonceurGeo|@AnnonceurVille) (de|des|du|d'|de $DET)?)? (@Regions|@Countries|@Cities|$NP|t_capital_1st):GEO:
=>AppendEntityFeature(trigger,"qualifier")
=>NormalizeEntity()
=<ClearEntityFeatures()
# loc.adm.reg
#loc phys
# est = dist (imm guide - p7)

########################### CITY ##############################################

rose:[(la)?] ville::CITY:Toulouse
=>AppendEntityFeature(left.2,"name.nickname")
=>AppendEntityFeature(trigger,"name.nickname")
=>NormalizeEntity()
=<ClearEntityFeatures()


# repérage des ville grâce à l'annonceur
# la ville de Hong Kong
@AnnonceurVille::($ADJ)? (de|du|d'|de $DET) (@Regions|@Countries|@Cities|$NP):CITY:
=>SetEntityFeature(trigger,"kind")
=>SetEntityFeature(right.3,"name")
=>NormalizeEntity()
=<ClearEntityFeatures()

# repérage des ville grâce à l'annonceur
@AnnonceurVille::($ADJ)? (de|du|d'|de $DET) (@Regions|@Countries|@Cities|$NP):CITY:
=>SetEntityFeature(trigger,"kind")
=>SetEntityFeature(right.3,"name")
=>NormalizeEntity()
=<ClearEntityFeatures()

@Cities:::CITY:
=>SetEntityFeature(trigger,"name")
=>NormalizeEntity()
=<ClearEntityFeatures()
#loc.adm.town

########################### Region ##############################################
@Regions:::REGION:
=>AppendEntityFeature(trigger,"name")
=>NormalizeEntity()
=<ClearEntityFeatures()

@Greeklocations:::LOCATION:
=>SetEntityFeature(trigger,"name")
=>NormalizeEntity()
=<ClearEntityFeatures()

########################### Pays ##############################################
@Countries:::COUNTRY:
=>SetEntityFeature(trigger,"name")
=>NormalizeEntity()
=<ClearEntityFeatures()


#****************************** regle avec normalisation

# Penmarc'| Penmarch => Penmarc'h
Penmarc'::h:GEO:Penmarc'h
=>SetEntityFeature(trigger,"name")
=>AppendEntityFeature(right,"name")
=<ClearEntityFeatures()

Penmarch:::GEO:Penmarc'h
=>SetEntityFeature(trigger,"name")
=>AppendEntityFeature(right,"name")
=<ClearEntityFeatures()

Loire::Atlantique:REGION:Loire-atlantique
=>SetEntityFeature(trigger,"name")
=>AppendEntityFeature(right,"name")
=>NormalizeEntity()
=<ClearEntityFeatures()

Charm::el Cheikh:COUNTRY:Charm el-Cheikh
=>SetEntityFeature(trigger,right,"name")
=>NormalizeEntity()
=<ClearEntityFeatures()

#****************************** regle pour noms composés
# put them in gazeteer??

Cap::Canaveral:GEO:
=>SetEntityFeature(trigger,right,"name")
=>NormalizeEntity()
=<ClearEntityFeatures()

Plaine:La:(St|Saint) Denis:CITY:
=>SetEntityFeature(left,"name")
=>AppendEntityFeature(trigger,"name")
=>AppendEntityFeature(right,"name")
=>NormalizeEntity()
=<ClearEntityFeatures()

Bolline:La::CITY:
=>SetEntityFeature(left,"name")
=>AppendEntityFeature(trigger,"name")
=>NormalizeEntity()
=<ClearEntityFeatures()
#quartier

PORTO::TORRES:CITY:Porto Torres
=>SetEntityFeature(trigger,right,"name")
=>NormalizeEntity()
=<ClearEntityFeatures()


###################### Geographical and Buildings ########################################

Elysée:::ODO:Élysée
=>SetEntityFeature(trigger,"name")
=>NormalizeEntity()
=<ClearEntityFeatures()

Élysée:::ODO:
=>SetEntityFeature(trigger,"name")
=>NormalizeEntity()
=<ClearEntityFeatures()

Maison:(la|La)?:Blanche:ODO:
=>AppendEntityFeature(trigger,"name")
=>AppendEntityFeature(right,"name")
=>NormalizeEntity()
=<ClearEntityFeatures()


###################### Geographical and Buildings ########################################

#******************************************************************************
#lieux physiques aquatiques 

#mer d'Iroise, mer de tranquilité (Lune), mare au diable, etc.
#@aqua::(de la|du|des|d'|au|à|aux)? (@RiversAndSeas|$NP|$NC|t_capital_1st):GEO:
@aqua::(de la|du|des|d'|au|à|aux)? (@RiversAndSeas|$NP|$NC|t_capital_1st):GEO:
=>SetEntityFeature(trigger,"kind")
=>AppendEntityFeature(right.2,"name")
=>NormalizeEntity()
=<ClearEntityFeatures()

@RiversAndSeas:::GEO:
=>AppendEntityFeature(trigger.1,"name")
=<ClearEntityFeatures()
#=>NormalizeEntity()

#*****************************************************************************


Trévaresse:::GEO:
#chaine de collines

@AnnonceurGeo::(de|du|d'|de $DET)? t_capital_1st:GEO:
=>SetEntityFeature(trigger,"kind")
=>SetEntityFeature(right.2,"name")
=>NormalizeEntity()
=<ClearEntityFeatures()

[habiter$V]::[(à|au|en|dans|vers|en direction de|près de|à coté de|au @PrecisionGeographique de)? (un|une|le|la|les|l')?] $NP:GEO:
#=>SetEntityFeature(right.3,"kind") 
#=>NormalizeEntity()
#=<ClearEntityFeatures()
#NP -> noun phrase. j'habite la rue, dans une grotte, vers la superette. 


# le Nord
# (je ne peux pas me permettre d\'étiqueter "est" tout seul)
# => la plupart des occurrences de Nord, Sud-Est etc ne sont pas étiquetées
#@PrecisionGeographique::(du pays)?:LOCATION:


#----------------------------------------------------------------------
# recognition of web adresses and ip adresses
#----------------------------------------------------------------------
36-15::$NC:COORDINATE:
=>NormalizeEntity()
=<ClearEntityFeatures()

t_url:::URL:
=>NormalizeEntity()
=<ClearEntityFeatures()

#----------------------------------------------------------------------
# recognition radio fm
#----------------------------------------------------------------------

#Radio Bleue sur 98.8 MHz . en conflit avec NUMEX qui capte le sequence <NUMBER> <UNIT>
MHz:t_dot_number::COORDINATE:
=>AppendEntityFeature(left,"name")
=>AppendEntityFeature(trigger,"name")
=>SetEntityFeature("location_type","FM Radio")
=>NormalizeEntity()
=<ClearEntityFeatures()

#@leguidedannotation
\@::(*):COORDINATE:
=>SetEntityFeature(trigger,"name")
=>AppendEntityFeature(right,"name")
=>NormalizeEntity()
=<ClearEntityFeatures()

#----------------------------------------------------------------------
# recognition telephone numbers
#----------------------------------------------------------------------
#01 69 85 80 02
# deactivated for the moment: problem is some previously found entities have a t_integer type (e.g. "31 décembre"), because it's taken from the first token
# maybe phone numbers should be recognized by regexMatcher instead
#t_integer>0<99:t_integer>0<9:t_integer>0<99 t_integer>0<99 t_integer>0<99:COORDINATE:
#=>SetEntityFeature(left,"name")
#=>AppendEntityFeature(trigger,"name")
#=>AppendEntityFeature(right,"name")
#=>SetEntityFeature("location_type","phone number")
#=>NormalizeEntity()
#=<ClearEntityFeatures()

#01-69-85-80-02
#t_integer>0<99:t_integer>0<9 - : - t_integer>0<99 - t_integer>0<99 - t_integer>0<99:COORDINATE:
#=>SetEntityFeature(left,"name")
#=>AppendEntityFeature(trigger,"name")
#=>AppendEntityFeature(right,"name")
#=>SetEntityFeature("location_type","phone number")
#=>NormalizeEntity()
#=<ClearEntityFeatures()

#+33 1 23 45 67 89
\+33::t_integer>0<9 t_integer>0<99 t_integer>0<99 t_integer>0<99 t_integer>0<99:COORDINATE:
=>SetEntityFeature(trigger,"name")
=>AppendEntityFeature(right,"name")
=>SetEntityFeature("location_type","phone number")
=>NormalizeEntity()
=<ClearEntityFeatures()

#+33.1.23.45.67.89
\+33::t_integer>0<9 \. t_integer>0<99 \. t_integer>0<99 \. t_integer>0<99 \. t_integer>0<99:COORDINATE:
=>SetEntityFeature(trigger,"name")
=>AppendEntityFeature(right,"name")
=>SetEntityFeature("location_type","phone number")
=>NormalizeEntity()
=<ClearEntityFeatures()



#mon identifiant skype est jean.dupont
#todo => car LIMA perd les espaces.


