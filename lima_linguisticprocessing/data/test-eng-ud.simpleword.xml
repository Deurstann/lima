<?xml version='1.0' encoding='UTF-8'?>
<testcases id="eng-ud.simpleword"
           trace=".simpleword.xml">
<testcase type="blocking">
  <expl>Test searching a word in dictionary.</expl>
  <call-parameters>
      <param key="text" value="The blue-ribbon campaign ended in disgrace. "/>
      <param key="language" value="eng.ud"/>
      <list key="pipelines">
        <item value="indexer"/>
      </list>
    </call-parameters>
  <test
    comment="checking presence of the word blue-ribbon"
    left="XPATH#//data_structure/vertex[token[position=5][length=11]]/data/simple_word"
    operator="exists"
    right=""/>
  <test
    comment="checking presence of the word 'blue-ribbon' with the tag"
    left="XPATH#//data_structure/vertex[token[position=5][length=11]]/data/simple_word//property/p[@prop='MICRO']/@val"
    operator="="
    right="NOUN"/>
  <test
    comment="checking presence of the word campaign"
    left="XPATH#//data_structure/vertex[token[position=17][length=8]]/data/simple_word"
    operator="exists"
    right=""/>
  <test
    comment="checking presence of the word ended"
    left="XPATH#//data_structure/vertex[token[position=26][length=5]]/data/simple_word"
    operator="exists"
    right=""/>
  <test
    comment="checking presence of the word in"
    left="XPATH#//data_structure/vertex[token[position=32][length=2]]/data/simple_word"
    operator="exists"
    right=""/>
  <test
    comment="checking presence of the word disgrace"
    left="XPATH#//data_structure/vertex[token[position=35][length=8]]/data/simple_word"
    operator="exists"
    right=""/>
  <test
    comment="checking presence of the word '.' with the tag PUNCT"
    left="XPATH#//data_structure/vertex[token[position=43][length=1]]/data/simple_word//property/p[@prop='MICRO']/@val"
    operator="="
    right="PUNCT"/>
</testcase>
<testcase type="blocking">
  <call-parameters>
      <param key="text" value="Our minds were open."/>
      <param key="language" value="eng.ud"/>
      <list key="pipelines">
        <item value="indexer"/>
      </list>
    </call-parameters>
  <expl>test search word in dictionary : check presence minds : mind.</expl>
  <test
    comment="Check presence minds --> mind"
    left="XPATH#//data_structure/vertex[token[position=5][length=5]]/data/simple_word/form/@norm"
    operator="contains"
    right="mind"/>
  <test
    comment="checking the tag of the word minds"
    left="XPATH#//data_structure/vertex[token[position=5][length=5]]/data/simple_word//property/p[@prop='MICRO']/@val"
    operator="contains"
    right="NOUN"/>
</testcase>
<testcase type="blocking">
  <call-parameters>
      <param key="text" value="The thought never occurred to us. "/>
      <param key="language" value="eng.ud"/>
      <list key="pipelines">
        <item value="indexer"/>
      </list>
    </call-parameters>
  <expl>test search word in dictionary :check presence thought: think.</expl>
  <test
    comment="Check presence thought --> thought"
    left="XPATH#//data_structure/vertex[token[position=5][length=7]]/data/simple_word/form/@norm"
    operator="contains"
    right="thought"/>
  <test
    comment="Check presence thought --> think"
    left="XPATH#//data_structure/vertex[token[position=5][length=7]]/data/simple_word/form/@norm"
    operator="contains"
    right="think"/>
</testcase>
<testcase type="blocking">
  <call-parameters>
      <param key="text" value="The Lome Palace houses all the president's services."/>
      <param key="language" value="eng.ud"/>
      <list key="pipelines">
        <item value="indexer"/>
      </list>
    </call-parameters>
  <expl>Lome</expl>
  <test
    comment="initial form : Lome, no accent"
    left="XPATH#//data_structure/vertex[token/position=5]/data//form/@infl"
    operator="contains"
    right="Lomé"/>
</testcase>
<testcase type="blocking">
  <call-parameters>
      <param key="text" value="Are you sleeping Brother John?"/>
      <param key="language" value="eng.ud"/>
      <list key="pipelines">
        <item value="indexer"/>
      </list>
    </call-parameters>
  <expl>Brother</expl>
  <test
    comment="initial form : Brother, unknown word, known word : brother"
    left="XPATH#//data_structure/vertex[token/position=18]/data//form/@infl"
    operator="contains"
    right="brother"/>
 </testcase>
 <testcase type="blocking">
  <call-parameters>
      <param key="text" value="The aclu : defending liberties."/>
      <param key="language" value="eng.ud"/>
      <list key="pipelines">
        <item value="indexer"/>
      </list>
    </call-parameters>
  <expl>aclu</expl>
  <test
    comment="initial form : aclu, known word : A.C.L.U."
    left="XPATH#//data_structure/vertex[token/position=5]/data//form/@infl"
    operator="contains"
    right="A.C.L.U."/>
  </testcase>
  <testcase type="blocking">
  <call-parameters>
      <param key="text" value="The ACLU : defending liberties."/>
      <param key="language" value="eng.ud"/>
      <list key="pipelines">
        <item value="indexer"/>
      </list>
    </call-parameters>
  <expl>ACLU</expl>
  <test
    comment="initial form : ACLU, known word :  A.C.L.U."
    left="XPATH#//data_structure/vertex[token/position=5]/data//form/@infl"
    operator="contains"
    right="A.C.L.U."/>
  </testcase>
 <testcase type="blocking">
  <call-parameters>
      <param key="text" value="The a-bomb exploded underground."/>
      <param key="language" value="eng.ud"/>
      <list key="pipelines">
        <item value="indexer"/>
      </list>
    </call-parameters>
  <expl>a-bomb</expl>
  <test
    comment="initial form : a-bomb, known word : A-bomb"
    left="XPATH#//data_structure/vertex[token/position=5]/data//form/@infl"
    operator="contains"
    right="A-bomb"/>
  </testcase>
 <testcase type="blocking">
  <call-parameters>
      <param key="text" value="The bric-a-brac finally got to her; she had to leave."/>
      <param key="language" value="eng.ud"/>
      <list key="pipelines">
        <item value="indexer"/>
      </list>
    </call-parameters>
  <expl>Bric a brac</expl>
  <test
    comment="initial form : Ã  propos"
    left="XPATH#//data_structure/vertex[token/position=5]/data//form/@infl"
    operator="contains"
    right="bric-à-brac"/>
  </testcase>
<testcase type="blocking">
  <call-parameters>
      <param key="text" value="they'll be late. "/>
      <param key="language" value="eng.ud"/>
      <list key="pipelines">
        <item value="indexer"/>
      </list>
    </call-parameters>
  <expl>they'll est une entrée concaténée (They will)</expl>
  <test trace=".tokenizer.xml"
    comment="There is a token they'll"
    left="XPATH#//data_structure/vertex/token[position=1][length=7]"
    operator="exists"
    right=""/>
    <test
    comment="The token they'll exists with the lemma they"
    left="XPATH#//data_structure/vertex[token[position=1][length=4]]//form/@lemma"
    operator="contains"
    right="they"/>
    <test
    comment="The token they'll exists with the lemma will"
    left="XPATH#//data_structure/vertex[token[position=5][length=3]]//form/@lemma"
    operator="contains"
    right="will"/>
</testcase>
<testcase type="blocking">
  <call-parameters>
      <param key="text" value="They'll be late. "/>
      <param key="language" value="eng.ud"/>
      <list key="pipelines">
        <item value="indexer"/>
      </list>
    </call-parameters>
  <expl>They'll has a concatanated entry as an orthographic alternative (They will)</expl>
  <test trace=".tokenizer.xml"
    comment="There is a token They'll"
    left="XPATH#//data_structure/vertex/token[position=1][length=7]"
    operator="exists"
    right=""/>
    <test
    comment="The token They'll does not exist anymore"
    left="XPATH#//data_structure/vertex/token[position=1][length=7]"
    operator="notexists"
    right=""/>
    <test
    comment="The token they'll exists with the lemma they"
    left="XPATH#//data_structure/vertex[token[position=1][length=4]]//form/@lemma"
    operator="contains"
    right="they"/>
    <test
    comment="The token they'll exists with the lemma will"
    left="XPATH#//data_structure/vertex[token[position=5][length=3]]//form/@lemma"
    operator="contains"
    right="will"/>
</testcase>
<testcase type="blocking">
  <call-parameters>
      <param key="text" value="He hasn't found it. "/>
      <param key="language" value="eng.ud"/>
      <list key="pipelines">
        <item value="indexer"/>
      </list>
    </call-parameters>
  <expl>hasn't is a concatanated entry (have not)</expl>
  <test trace=".tokenizer.xml"
    comment="There is a token hasn't"
    left="XPATH#//data_structure/vertex/token[position=4][length=6]"
    operator="exists"
    right=""/>
    <test
    comment="The token has exists with the lemma have"
    left="XPATH#//data_structure/vertex[token[position=4][length=3]]//form/@lemma"
    operator="contains"
    right="have"/>
    <test
    comment="The token n't exists with the lemma not"
    left="XPATH#//data_structure/vertex[token[position=7][length=3]]//form/@lemma"
    operator="contains"
    right="not"/>
</testcase>
</testcases>
