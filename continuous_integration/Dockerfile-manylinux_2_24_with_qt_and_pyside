ARG PYTHON_VERSION=3.8
ARG QT_VERSION=5.15.3
FROM aymara/manylinux_2_24_with_qt${QT_VERSION}-python${PYTHON_VERSION}:latest as aymara_manylinux_2_24_with_qt

FROM quay.io/pypa/manylinux_2_24_x86_64

ARG QT_VERSION=5.15
ARG QT_VERSION_MAJOR=5
ARG QT_FULL_VERSION=5.15.2
ARG PYTHON_VERSION="3.8"
ARG PYTHON_SHORT_VERSION="cp38-cp38"
# For python 3.7, it is 3.7.13
# For python 3.8, it is 3.8.13
ARG PYTHON_FULL_VERSION="3.8.13"

ENV DEBIAN_FRONTEND=noninteractive
ENV PATH="/opt/python/${PYTHON_SHORT_VERSION}/bin:${PATH}"

ENV PATH=/opt/gcc-${GCC_VERSION}/bin:$PATH
ENV LD_LIBRARY_PATH=/opt/gcc-${GCC_VERSION}/lib:/opt/gcc-${GCC_VERSION}/lib64:$LD_LIBRARY_PATH
ENV MANPATH=/opt/gcc-${GCC_VERSION}/share/man:$MANPATH
ENV INFOPATH=/opt/gcc-${GCC_VERSION}/share/info:$INFOPATH

ENV CC=/opt/gcc-${GCC_VERSION}/bin/gcc
ENV CXX=/opt/gcc-${GCC_VERSION}/bin/g++

RUN apt-get clean && apt-get update && apt-get install -y locales
RUN locale-gen en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8
RUN locale

RUN apt-get update && \
    apt-get install -y \
        wget build-essential pkg-config automake  gawk gettext \
        firebird-dev \
        freetds-dev \
        gstreamer1.0-plugins-base \
        gstreamer1.0-plugins-good \
        gstreamer1.0-plugins-ugly \
        gstreamer1.0-x \
        libasound2-dev \
        libavcodec-dev \
        libavformat-dev \
        libavutil-dev \
        libbz2-dev \
        libcap-dev \
        libdbus-1-dev \
        libdbus-glib-1-dev \
        libdrm-dev \
        libegl1-mesa-dev \
        libevent-dev \
        libfontconfig1-dev \
        libfreetype6-dev \
        libgbm-dev \
        libgcrypt20-dev \
        libgles2-mesa-dev \
        libglib2.0-dev \
        libgst-dev \
        libgstreamer-plugins-base1.0-dev \
        libgstreamer1.0-dev \
        libicu-dev \
        libinput-dev \
        libiodbc2-dev \
        libjpeg62-turbo-dev \
        libjsoncpp-dev \
        libminizip-dev \
        libnss3-dev \
        libopus-dev \
        libpci-dev \
        libpng-dev \
        libpng16-16 \
        libpq-dev \
        libpulse-dev \
        librsvg2-common \
        libsnappy-dev \
        libsqlite0-dev \
        libsqlite3-dev \
        libsrtp0-dev \
        libsrtp2-dev \
        libssl-dev \
        libssl1.1 \
        libswscale-dev \
        libsystemd-dev \
        libudev-dev \
        libvpx-dev \
        libwayland-dev \
        libwebp-dev \
        libx11-dev \
        libx11-xcb-dev \
        libx11-xcb1 \
        libxcb-glx0-dev \
        libxcb-icccm4 \
        libxcb-icccm4-dev \
        libxcb-image0 \
        libxcb-image0-dev \
        libxcb-keysyms1 \
        libxcb-keysyms1-dev \
        libxcb-randr0-dev \
        libxcb-render-util0 \
        libxcb-render-util0-dev \
        libxcb-shape0-dev \
        libxcb-shm0 \
        libxcb-shm0-dev \
        libxcb-sync-dev \
        libxcb-sync1 \
        libxcb-xfixes0-dev \
        libxcb-xinerama0 \
        libxcb-xinerama0-dev \
        libxcb1 \
        libxcb1-dev \
        libxext-dev \
        libxi-dev \
        libxkbcommon-dev \
        libxrender-dev \
        libxslt1-dev \
        libxss-dev \
        libxtst-dev \
        ninja-build \
        nodejs \
        ruby \
        va-driver-all \
        lsb-release \
        libssl-dev \
        gperf \
        dos2unix


RUN apt remove -y libpython3.5-stdlib libpython3.5-minimal


RUN echo "LC_ALL=en_US.UTF-8" > /etc/default/locale
RUN echo "LANG=en_US.UTF-8" >> /etc/default/locale
RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen
RUN cp  /etc/default/locale /etc/environment
RUN locale-gen
RUN dpkg-reconfigure locales

COPY --from=aymara/manylinux_2_24_with_llvm:latest /opt/llvm /opt/llvm
ENV PATH=/opt/llvm/bin:$PATH
ENV LD_LIBRARY_PATH=/opt/llvm/lib:$LD_LIBRARY_PATH
COPY --from=aymara_manylinux_2_24_with_qt /opt/qt${QT_VERSION_MAJOR} /opt/qt${QT_VERSION_MAJOR}
ENV PATH=/opt/qt${QT_VERSION_MAJOR}/${QT_FULL_VERSION}/gcc_64/bin:$PATH

RUN python${PYTHON_VERSION} -m pip install scikit-build

RUN cmake --version



# Install PySide${QT_VERSION_MAJOR} and shiboken${QT_VERSION_MAJOR} from source as binary installs are broken
# Done in /home/gael/Logiciels/
WORKDIR /
RUN echo "Downloading https://download.qt.io/official_releases/QtForPython/pyside${QT_VERSION_MAJOR}/PySide${QT_VERSION_MAJOR}-${QT_FULL_VERSION}-src/pyside-setup-opensource-src-${QT_FULL_VERSION}.tar.xz"
RUN wget https://download.qt.io/official_releases/QtForPython/pyside${QT_VERSION_MAJOR}/PySide${QT_VERSION_MAJOR}-${QT_FULL_VERSION}-src/pyside-setup-opensource-src-${QT_FULL_VERSION}.tar.xz
RUN tar xf pyside-setup-opensource-src-${QT_FULL_VERSION}.tar.xz
RUN mv /pyside-setup-opensource-src-${QT_FULL_VERSION} /pyside-setup
WORKDIR /pyside-setup
RUN install -d /opt/_internal/cpython-${PYTHON_FULL_VERSION}/lib/x86_64-linux-gnu/
RUN touch /opt/_internal/cpython-${PYTHON_FULL_VERSION}/lib/x86_64-linux-gnu/libpython${PYTHON_VERSION}.a
RUN touch /opt/_internal/cpython-${PYTHON_FULL_VERSION}/lib/x86_64-linux-gnu/libpython${PYTHON_VERSION}m.a
RUN apt-get update -y -qq && apt-get install -y libpulse-mainloop-glib0

WORKDIR /pyside-setup
RUN python${PYTHON_VERSION} -m pip install cmake

ENV QTDIR=/opt/qt${QT_VERSION_MAJOR}
# TODO fint the _internal bin path below automatically
ENV PATH=/opt/qt${QT_VERSION_MAJOR}/bin:/opt/_internal/cpython-${PYTHON_FULL_VERSION}/bin:$PATH
ENV LD_LIBRARY_PATH=/opt/qt${QT_VERSION_MAJOR}/lib:$LD_LIBRARY_PATH

# RUN python${PYTHON_VERSION} setup.py install --cmake=/opt/python/cp${PYTHON_SHORT_VERSION}-cp${PYTHON_SHORT_VERSION}/bin/cmake --build-type=all
RUN python${PYTHON_VERSION} setup.py install --cmake=/opt/_internal/cpython-${PYTHON_FULL_VERSION}/bin/cmake --build-type=all --qt-target-path=/opt/qt${QT_VERSION_MAJOR}

WORKDIR /
