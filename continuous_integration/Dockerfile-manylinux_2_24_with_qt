FROM quay.io/pypa/manylinux_2_24_x86_64

ARG QT_VERSION="5.15"
ARG QT_VERSION_MAJOR="5"
ARG QT_VERSION_MINOR="15"
ARG QT_VERSION_PATCH="2"
ARG QT_FULL_VERSION="5.15.2"
ARG PYTHON_VERSION="3.8"
ARG PYTHON_SHORT_VERSION="cp38-cp38"
# For python 3.7, it is 3.7.13
# For python 3.8, it is 3.8.13
ARG PYTHON_FULL_VERSION="3.8.13"
ENV PATH="/opt/python/${PYTHON_SHORT_VERSION}/bin:${PATH}"

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get clean && apt-get update && apt-get install -y locales
RUN locale-gen en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8
RUN locale

RUN apt-get update && \
    apt-get install -y \
        wget build-essential pkg-config automake  gawk gettext \
        firebird-dev \
        freetds-dev \
        gstreamer1.0-plugins-base \
        gstreamer1.0-plugins-good \
        gstreamer1.0-plugins-ugly \
        gstreamer1.0-x \
        libasound2-dev \
        libavcodec-dev \
        libavformat-dev \
        libavutil-dev \
        libbz2-dev \
        libcap-dev \
        libdbus-1-dev \
        libdbus-glib-1-dev \
        libdrm-dev \
        libegl1-mesa-dev \
        libevent-dev \
        libfontconfig1-dev \
        libfreetype6-dev \
        libgbm-dev \
        libgcrypt20-dev \
        libgles2-mesa-dev \
        libglib2.0-dev \
        libgst-dev \
        libgstreamer-plugins-base1.0-dev \
        libgstreamer1.0-dev \
        libicu-dev \
        libinput-dev \
        libiodbc2-dev \
        libjpeg62-turbo-dev \
        libjsoncpp-dev \
        libminizip-dev \
        libnss3-dev \
        libopus-dev \
        libpci-dev \
        libpng-dev \
        libpng16-16 \
        libpq-dev \
        libpulse-dev \
        librsvg2-common \
        libsnappy-dev \
        libsqlite0-dev \
        libsqlite3-dev \
        libsrtp0-dev \
        libsrtp2-dev \
        libssl-dev \
        libssl1.1 \
        libswscale-dev \
        libsystemd-dev \
        libudev-dev \
        libvpx-dev \
        libwayland-dev \
        libwebp-dev \
        libx11-dev \
        libx11-xcb-dev \
        libx11-xcb1 \
        libxcb-glx0-dev \
        libxcb-icccm4 \
        libxcb-icccm4-dev \
        libxcb-image0 \
        libxcb-image0-dev \
        libxcb-keysyms1 \
        libxcb-keysyms1-dev \
        libxcb-randr0-dev \
        libxcb-render-util0 \
        libxcb-render-util0-dev \
        libxcb-shape0-dev \
        libxcb-shm0 \
        libxcb-shm0-dev \
        libxcb-sync-dev \
        libxcb-sync1 \
        libxcb-xfixes0-dev \
        libxcb-xinerama0 \
        libxcb-xinerama0-dev \
        libxcb1 \
        libxcb1-dev \
        libxext-dev \
        libxi-dev \
        libxkbcommon-dev \
        libxrender-dev \
        libxslt1-dev \
        libxss-dev \
        libxtst-dev \
        ninja-build \
        nodejs \
        ruby \
        va-driver-all \
        lsb-release \
        libssl-dev \
        gperf \
        dos2unix

RUN apt remove -y libpython3.5-stdlib libpython3.5-minimal
RUN install -d /src
WORKDIR /src
RUN wget -q https://download.qt.io/archive/qt/${QT_VERSION}/${QT_FULL_VERSION}/single/qt-everywhere-src-${QT_FULL_VERSION}.tar.xz
RUN tar xf qt-everywhere-src-${QT_FULL_VERSION}.tar.xz

WORKDIR /

ENV BUILD_TARGET=/build
ENV SRC=/src
ENV QT_BRANCH="${QT_FULL_VERSION}"
ENV MAKE_CORES="$(expr $(nproc) + 2)"

RUN mkdir -p "$BUILD_TARGET"

RUN echo "Building QT version $QT_BRANCH."

# This build process is inspired by
# https://www.tal.org/tutorials/building-qt-512-raspberry-pi
ENV SRC_DIR="/src/qt-everywhere-src-${QT_FULL_VERSION}"

WORKDIR $BUILD_TARGET
# @TODO: Add in the `-opengl es2` flag for Pi 1 - Pi 3.
# Currently this breaks the QTWebEngine process.
RUN bash "${SRC_DIR}"/configure \
    -platform "linux-g++" \
    -confirm-license \
    -dbus-linked \
    -no-eglfs \
    -no-evdev \
    -force-pkg-config \
    -no-glib \
    -make libs \
    -no-compile-examples \
    -no-cups \
    -no-gbm \
    -no-gtk \
    -no-pch \
    -no-use-gold-linker \
    -no-xcb \
    -no-xcb-xlib \
    -nomake examples \
    -nomake tests \
    -opensource \
    -prefix /opt/qt${QT_VERSION_MAJOR} \
    -qpa eglfs \
    -qt-pcre \
    -reduce-exports \
    -release \
    -skip qt3d \
    -skip qtactiveqt \
    -skip qtandroidextras \
    -skip qtcanvas3d \
    -skip qtcharts \
    -skip qtdatavis3d \
    -skip qtgamepad \
    -skip qtgraphicaleffects \
    -skip qtlocation \
    -skip qtlottie \
    -skip qtmacextras \
    -skip qtpurchasing \
    -skip qtquick3d \
    -skip qtquickcontrols \
    -skip qtquickcontrols2 \
    -skip qtquicktimeline \
    -skip qtscript \
    -skip qtscxml \
    -skip qtsensors \
    -skip qtserialbus \
    -skip qtserialport \
    -skip qtspeech \
    -skip qttools \
    -skip qttranslations \
    -skip qtvirtualkeyboard \
    -skip qtwayland \
    -skip qtwebview \
    -skip qtwebengine \
    -skip qtwinextras \
    -skip qtx11extras \
    -skip wayland \
    -no-ssl \
    -system-freetype \
    -system-libjpeg \
    -system-libpng \
    -system-zlib

# The RAM consumption is proportional to the amount of cores.
# On an 8 core box, the build process will require ~16GB of RAM.
RUN make -j $(expr $(nproc) + 2)
RUN make install

